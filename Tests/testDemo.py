import unittest
from appium.webdriver.common.appiumby import AppiumBy
from Conection.conection import Driver
from Actions.palmlog import Palmlog


class TestAppium(unittest.TestCase):
    def setUp(self) -> None:
        self.driver = Driver()
        
    def tearDown(self):
        self.driver.instance.quit()

    def test_login_messages(self) -> None:
        loginField = '//android.widget.EditText[@text="Login (Document)"]'
        loginButton = '//android.widget.TextView[@text=" Login "]'
        password = '//android.widget.EditText[@text="Password"]'
        plate = '//android.widget.EditText[@text="Plate"]'
        locationPermition = 'com.android.permissioncontroller:id/permission_allow_foreground_only_button'
        message = 'android:id/message'
        allowMessageButton = 'android:id/button1'
        palmlog = Palmlog(self.driver)
        palmlog.waitElementById(locationPermition)
        palmlog.clickByID(locationPermition)
        palmlog.typeFieldByXpath(loginField, '70057836620')
        palmlog.typeFieldByXpath(password, '@Magis123')
        palmlog.typeFieldByXpath(plate, 'ABC1234')
        palmlog.clickByXpath(loginButton)
        palmlog.waitElementById(message)
        
        palmlog.assertEqualsTextById(message,'The positions generated by the app will not be sent, because no company was found!')
        palmlog.clickByID(allowMessageButton)
        palmlog.assertEqualsTextById(message, 'Para iniciar a viagem selecione o botão "Iniciar Viagem". A partir daí serão geradas posições com determinada frequência. Para finalizar a viagem e a geração de posições, selecione o botão "Finalizar viagem".')
        
    def test_login_user_informations(self) -> None:
        loginField = '//android.widget.EditText[@text="Login (Document)"]'
        loginButton = '//android.widget.TextView[@text=" Login "]'
        passwordField = '//android.widget.EditText[@text="Password"]'
        plateField = '//android.widget.EditText[@text="Plate"]'
        locationPermition = 'com.android.permissioncontroller:id/permission_allow_foreground_only_button'
        message = 'android:id/message'
        allowMessageButton = 'android:id/button1'
        informationName = '//android.widget.TextView[@text=" Leonardo Oliveira"]'
        informationDocument = '//android.widget.TextView[@text=" 70057836620"]'
        informationVehicle = '//android.widget.TextView[@text=" ABC1234"]'
        
        palmlog = Palmlog(self.driver)
        palmlog.waitElementById(locationPermition)
        palmlog.clickByID(locationPermition)
        palmlog.typeFieldByXpath(loginField, '70057836620')
        palmlog.typeFieldByXpath(passwordField, '@Magis123')
        palmlog.typeFieldByXpath(plateField, 'ABC1234')
        palmlog.clickByXpath(loginButton)
        palmlog.waitElementById(message)
        palmlog.clickByID(allowMessageButton)
        palmlog.waitElementById(message)
        palmlog.clickByID(allowMessageButton)
        palmlog.waitElementByXpath(informationName)
        palmlog.waitElementByXpath(informationDocument)
        palmlog.waitElementByXpath(informationVehicle)
        
        palmlog.assertEqualsTextByXpath(informationName, ' Leonardo Oliveira')
        palmlog.assertEqualsTextByXpath(informationDocument, ' 70057836620')
        palmlog.assertEqualsTextByXpath(informationVehicle, ' ABC1234')
        
    def test_logout(self) -> None:
        loginField = '//android.widget.EditText[@text="Login (Document)"]'
        loginButton = '//android.widget.TextView[@text=" Login "]'
        passwordField = '//android.widget.EditText[@text="Password"]'
        plateField = '//android.widget.EditText[@text="Plate"]'
        locationPermition = 'com.android.permissioncontroller:id/permission_allow_foreground_only_button'
        message = 'android:id/message'
        allowMessageButton = 'android:id/button1'
        logoutButton = '//android.widget.FrameLayout[@resource-id="android:id/content"]/android.widget.FrameLayout/android.view.ViewGroup/android.view.ViewGroup/android.view.ViewGroup/android.view.ViewGroup/android.view.ViewGroup/android.view.ViewGroup/android.view.ViewGroup/android.view.ViewGroup/android.view.ViewGroup/android.view.ViewGroup[9]/android.view.ViewGroup/android.view.ViewGroup'
        
        
        palmlog = Palmlog(self.driver)
        palmlog.waitElementById(locationPermition)
        palmlog.clickByID(locationPermition)
        palmlog.typeFieldByXpath(loginField, '70057836620')
        palmlog.typeFieldByXpath(passwordField, '@Magis123')
        palmlog.typeFieldByXpath(plateField, 'ABC1234')
        palmlog.clickByXpath(loginButton)
        palmlog.waitElementById(message)
        palmlog.clickByID(allowMessageButton)
        palmlog.waitElementById(message)
        palmlog.clickByID(allowMessageButton)
        palmlog.waitElementByXpath(logoutButton)
        palmlog.clickByXpath(logoutButton)
        palmlog.waitElementByXpath(loginButton)
        
        palmlog.assertEqualsTextByXpath(loginButton, ' Login ')
        

if __name__ == '__main__':
    unittest.main()